#!/bin/bash
source ./Aisio-shell-function.sh

operation=""
mode=""
rsa_format=""
rsa_mode=""
file="test.bin"
iterations=1
encoder="-e"


# Cryptography Settings...
BASE="-base16"

# Aes Settings...
AES_KEY="Key length must be 128, 192, 256"
AES_IV="IvMustBe128Size."
AES_TAG="TagMustBe128Size"
AES_AAD="Additional Authenticated Data (AAD) can be of any length"
AES_KEY2="Secondary Key for AES-XTS Tweak."
AES_TWEAK="SectorNumber0001"
AES_COUNTER=1

AES_GCM_TAG="73DD32019CD29E7251D17128DE27FFDD"
AES_CCM_TAG="DB9A881B8A159B079F826BD043A4F8C9"
AES_OCB_TAG="F7F64A75E6575C9093E12AB272CBF024"
AES_NONCE="Nonce12bytes"
AES_KEK="This is AES WRAP, 128, 192, 256."

# Des Settings...
DES_KEY="Key Must Be 128,192 Size"
DES_IV="Iv8Bytes"
DES_KEK="WRAP Key 128 192 by DES."

RSA_DER_PUB="30820122300D06092A864886F70D01010105000382010F003082010A0282010100A7A7727095C83912BE282A222644DB072AE132AE9176D0F3537CC091270265B35C94D7BAA4802655B827356CA287AB0BEA7C3361B7B93BADF56D43D43DF69ADDB0E10C9C314AFAA76BC1516BCD6D2CC6121E35FDA9FBB55859F072B19A8810ED7494F90DD6F128824DB61F8A5454F1EB846B10390DE4525085500AB80E985E1C08D8C4BDA500FDB753F8250ABBA99D61962FE19C57CA14DBDAE80C81890C0E261A9B9D84E2C20C1F77989664208A5273A48DD8463CA3EE7F5CCE1F3D86C18C5CF389CB832A71F05011DDBAD5579998793DA95CFBC2CE60DA5471037BF65B9B226FDBA03C80957D84BB336C2F1A11CDCCAC968BAC40FA15A232B0B5959A0DC4950203010001"

RSA_DER_PRIV="308204A10201000282010100A7A7727095C83912BE282A222644DB072AE132AE9176D0F3537CC091270265B35C94D7BAA4802655B827356CA287AB0BEA7C3361B7B93BADF56D43D43DF69ADDB0E10C9C314AFAA76BC1516BCD6D2CC6121E35FDA9FBB55859F072B19A8810ED7494F90DD6F128824DB61F8A5454F1EB846B10390DE4525085500AB80E985E1C08D8C4BDA500FDB753F8250ABBA99D61962FE19C57CA14DBDAE80C81890C0E261A9B9D84E2C20C1F77989664208A5273A48DD8463CA3EE7F5CCE1F3D86C18C5CF389CB832A71F05011DDBAD5579998793DA95CFBC2CE60DA5471037BF65B9B226FDBA03C80957D84BB336C2F1A11CDCCAC968BAC40FA15A232B0B5959A0DC49502030100010281FF3FD0B5DB416111ADBB5EAAE3E3028B78F61250713EB4897F31B9F559BCB865C4E006E44F98BFD965E3EBB36A34AC52FD6F0AF41221876068F357DCCF09719BF2FF7D54FA1F1E879FA4647F9989265AABB4E475A8A6B5EFFBCDCE7FA0E1F87723B2AE573B09CEC1B9108625ED0FBAD3E9274560921E2958B9F83D7F653A9AC4C5492D7EBFF70DDE5893657AD2DF6E9A96A3A8D4D9674405607F23852C688339EBA85BEB51656CCD008C541F4082984BCAD1BCAB12234058E37F4D6FFEC3AA1BFEAE41F4C0B775EAD85B0045C725DBEC62C77680660AB463126FEE68EBAF470AABA6F0817C0E7697067605A2BE08AB176D330DE8FD7B77D0E9F9F4B7E414E58102818100C66264D04FD3453E55A7FBD0D8EAB7B5E9DAFB3D1806A8145919F033ECFFC87D797DA687380F5D65AE510EC1A1102E643725623BE5E5E7153823C759C288C94A7F57C47B2F1CB5D13351B70A7277903565D30D7E9F7A7F2B9970ED1DD6A9E7D882E8D20EC586004A718C77E77E2E56FEFA4904936F69021519D8849E9BC8F7B502818100D8584CDA06965E193FCAE823111201590260370F86AFA0CD2720ACD9E95A00CC8BF2FFB88858422ECC7F462EB3D6998E65030EA0987331F4EA130434F832F6C225E2B545440A4B7F9CB04FF9F463D0BE594193DDCA514BA58F34BD6F190B287A9A32514C122F5C20775B6387D1FAC769648F808EE2760569723791FCC5E7E5610281804BE74BB154497E7DDA221ABC0EB2C7B587936C7B349D1F6421AF45F36823799F60838DDAC0BD483BE6554733189FEB5016B56BFF84F7D0D1929845E6F7028519C6DD5AE4D2E2C64213C399281B21DA0044445B2E6E705D05DE809188D02053FFC81EB2784A64F9E981C67FFE078E4D64E3785A92DA96AFE048F249D3B1C153DD02818100A492D7336B9B6B4D8DC78EBB4E3B022771B53B6D6629A80B27DEA55EC7329E34FBA9087A99CD79DB1BD91DCC5D25BC7E23BD259D691B083FA4E87E64C5020FD034FDB6A35054FC85C0EE2688A02E6616C6D329E6A8071BA27FC3C0EF08800274F163A1905AAD0849F241E4FEE6EEFC4EE21E7FCF31DA51D79AF946E6A0ADFD41028180539ABF6CFEF34FC1CD48176B679CD6960608B9177BA9C3256FB2E8395B7D96C57C11ED6B8889BB264C45AB87AC1885CAEC064E0D3F7CDD30261A522DFC1F6E88B378F96B843F3C13AB960434CE24FEC96B038F5560151A611DF3070519140E508EDF398615A35FB8EB771D3BAADFA0D362263C10D90772AC0FA43C4D62F376D9"

N="A7A7727095C83912BE282A222644DB072AE132AE9176D0F3537CC091270265B35C94D7BAA4802655B827356CA287AB0BEA7C3361B7B93BADF56D43D43DF69ADDB0E10C9C314AFAA76BC1516BCD6D2CC6121E35FDA9FBB55859F072B19A8810ED7494F90DD6F128824DB61F8A5454F1EB846B10390DE4525085500AB80E985E1C08D8C4BDA500FDB753F8250ABBA99D61962FE19C57CA14DBDAE80C81890C0E261A9B9D84E2C20C1F77989664208A5273A48DD8463CA3EE7F5CCE1F3D86C18C5CF389CB832A71F05011DDBAD5579998793DA95CFBC2CE60DA5471037BF65B9B226FDBA03C80957D84BB336C2F1A11CDCCAC968BAC40FA15A232B0B5959A0DC495"
E="010001"

P="C66264D04FD3453E55A7FBD0D8EAB7B5E9DAFB3D1806A8145919F033ECFFC87D797DA687380F5D65AE510EC1A1102E643725623BE5E5E7153823C759C288C94A7F57C47B2F1CB5D13351B70A7277903565D30D7E9F7A7F2B9970ED1DD6A9E7D882E8D20EC586004A718C77E77E2E56FEFA4904936F69021519D8849E9BC8F7B5"
Q="D8584CDA06965E193FCAE823111201590260370F86AFA0CD2720ACD9E95A00CC8BF2FFB88858422ECC7F462EB3D6998E65030EA0987331F4EA130434F832F6C225E2B545440A4B7F9CB04FF9F463D0BE594193DDCA514BA58F34BD6F190B287A9A32514C122F5C20775B6387D1FAC769648F808EE2760569723791FCC5E7E561"
DP="4BE74BB154497E7DDA221ABC0EB2C7B587936C7B349D1F6421AF45F36823799F60838DDAC0BD483BE6554733189FEB5016B56BFF84F7D0D1929845E6F7028519C6DD5AE4D2E2C64213C399281B21DA0044445B2E6E705D05DE809188D02053FFC81EB2784A64F9E981C67FFE078E4D64E3785A92DA96AFE048F249D3B1C153DD"
DQ="A492D7336B9B6B4D8DC78EBB4E3B022771B53B6D6629A80B27DEA55EC7329E34FBA9087A99CD79DB1BD91DCC5D25BC7E23BD259D691B083FA4E87E64C5020FD034FDB6A35054FC85C0EE2688A02E6616C6D329E6A8071BA27FC3C0EF08800274F163A1905AAD0849F241E4FEE6EEFC4EE21E7FCF31DA51D79AF946E6A0ADFD41"
QI="539ABF6CFEF34FC1CD48176B679CD6960608B9177BA9C3256FB2E8395B7D96C57C11ED6B8889BB264C45AB87AC1885CAEC064E0D3F7CDD30261A522DFC1F6E88B378F96B843F3C13AB960434CE24FEC96B038F5560151A611DF3070519140E508EDF398615A35FB8EB771D3BAADFA0D362263C10D90772AC0FA43C4D62F376D9"

start_time=$(date +%s%N)

if [ "$#" -eq 0 ]; then
	Usage
fi

while [[ "$#" -gt 0 ]]; do
	case "$1" in
		-w|-a|-i|-r|-id|-rm|-rs|-ri)
			operation="$1"
			shift
			;;
		-b16|-b32|-b64|-b85)
			operation="$1"
			shift
			;;
		-imp)
			operation="$1"
			shift
			;;
		-gen)
			if [ $rsa_format = "" ]; then
				operation="$1"
			else
				mode="$1"
			fi
			shift
			;;
		-exp)
			mode="$1"
			shift
			;;
		-aes|-des|-hash|-rsa)
			operation="$1"
			shift
			;;
		-ctr|-cbc|-cfb|-ofb|-ecb|-gcm|-ccm|-xts|-ocb|-wrap)
			mode="$1"
			shift
			;;
		-md5|-md5-sha1|-sha1|-sha2-224|-sha2-256|-sha2-384|-sha2-512|-sha2-512-224|-sha2-512-256|-sha3-224|-sha3-256|-sha3-384|-sha3-512|-sha3-ke-128|-sha3-ke-256|-blake2s-256|-blake2b-512|-sm3|-ripemd160)
			mode="$1"
			shift
			;;
		-pem|-der|-param|-keys)
			rsa_format="$1"
			shift
			;;
		-e|-d)
			encoder="$1"
			shift
			;;
		-f)
			file="$2"
			shift 2
			;;
		-n)
			iterations="$2"
			shift 2
			;;
		*)
			Usage
			;;
	esac
done
index_list=$(seq 0 $((iterations-1)) | tr '\n' ' ')

if [ -z "$operation" ]; then
	echo "Error: Operation is required."
	Usage
fi

for ((i=1; i<=iterations; i++)); do
	echo "Iteration $i/$iterations"
	case "$operation" in
		-w)
			BinaryWrite
			;;
		-a)
			BinaryAppend
			;;
		-i)
			BinaryInsert
			;;
		-r)
			BinaryReadAll
			;;
		-id)
			BinaryIndexes
			;;
		-rm)
			BinaryRemove
			;;
		-rs)
			BinaryRemoveIndex
			break
			;;
		-ri)
			BinaryReadIndex
			break
			;;
		-b16) 
			BASE_16
			;;
		-b32) 
			BASE_32
			;;
		-b64) 
			BASE_64
			;;
		-b85) 
			BASE_85
			;;
		-gen)
			Generate
			;;
		-imp)
			Import
			;;
		-aes)
			case "$mode" in
				-ctr)
					AES_CTR
					;;
				-cbc)	
					AES_CBC
					;;
				-cfb)	
					AES_CFB
					;;
				-ofb)	
					AES_OFB
					;;
				-ecb)	
					AES_ECB
					;;
				-gcm)	
					AES_GCM
					;;
				-ccm)	
					AES_CCM
					;;
				-xts)	
					AES_XTS
					;;
				-ocb)	
					AES_OCB
					;;
				-wrap)	
					AES_WRAP
					;;
				*)
					;;
			esac
			;;
		-des)
			case "$mode" in
				-cbc)
					DES_CBC
					;;
				-cfb)
					DES_CFB
					;;
				-ofb)
					DES_OFB
					;;
				-ecb)
					DES_ECB
					;;
				-wrap)
					DES_WRAP
					;;
				*)
					;;
			esac
			;;
		-hash)
			case "$mode" in
				-md5)
					HASH_MD5
					;;
				-md5-sha1)
					HASH_MD5_SHA1
					;;
				-sha1)
					HASH_SHA1
					;;
				-sha2-224)
					HASH_SHA2_224
					;;
				-sha2-256)
					HASH_SHA2_256
					;;
				-sha2-384)
					HASH_SHA2_384
					;;
				-sha2-512)
					HASH_SHA2_512
					;;
				-sha2-512-224)
					HASH_SHA2_512_224
					;;
				-sha2-512-256)
					HASH_SHA2_512_256
					;;
				-sha3-224)
					HASH_SHA3_224
					;;
				-sha3-256)
					HASH_SHA3_256
					;;
				-sha3-384)
					HASH_SHA3_384
					;;
				-sha3-512)
					HASH_SHA3_512
					;;
				-sha3-ke-128)
					HASH_SHA3_KE_128
					;;
				-sha3-ke-256)
					HASH_SHA3_KE_256
					;;
				-blake2s-256)
					HASH_BLAKE2S_256
					;;
				-blake2b-512)
					HASH_BLAKE2B_512
					;;
				-sm3)
					HASH_SM3
					;;
				-ripemd160)
					HASH_RIPEMD160
					;;
			esac
			;;
		-rsa)
			case "$mode" in
				-gen)
					case "$rsa_format" in
						-pem)
							RSA_Generate_Keys_PEM
							;;
						-der)

							RSA_Generate_Keys_DER
							;;
						-param)
							RSA_Generate_Paramters
							;;
					esac
					;;
				-exp)
					case "$rsa_format" in
						-param)
							RSA_Export_Paramters
							;;
						-keys)
							RSA_Export_Keys
							;;
					esac
					;;
			esac
			;;
		*)
			Usage
			;;
	esac
done
end_time=$(date +%s%N)
elapsed_time=$((end_time - start_time))
elapsed_time_sec=$(echo "scale=6; $elapsed_time / 1000000000" | bc)
printf "Execution time: %.6f seconds\n" "$elapsed_time_sec"
