; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "aisio"
#define MyAppDirName "AisIO"
#define MyAppVersion "1.0.10"
#define MyAppPublisher "Ais Fran, Inc."
#define MyAppURL "https://github.com/TaiwanMiya/Ais.IO"
#define MyAppExeName "aisio.exe"
#define MyAppDll "Ais.IO.dll"
#define AppImage "C:\Users\User\Documents\Ais.IO\Installer\AisIO.bmp"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{A904D573-F069-4E88-9547-C266D06F4C14}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
AppVerName={#MyAppName}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\{#MyAppDirName}
DisableDirPage=yes
; "ArchitecturesAllowed=x64compatible" specifies that Setup cannot run
; on anything but x64 and Windows 11 on Arm.
ArchitecturesAllowed=x64compatible
; "ArchitecturesInstallIn64BitMode=x64compatible" requests that the
; install be done in "64-bit mode" on x64 or Windows 11 on Arm,
; meaning it should use the native 64-bit Program Files directory and
; the 64-bit view of the registry.
ArchitecturesInstallIn64BitMode=x64compatible
DefaultGroupName={#MyAppName}
DisableProgramGroupPage=yes
LicenseFile=C:\Users\User\Documents\Ais.IO\Installer\License.rtf
; Uncomment the following line to run in non administrative install mode (install for current user only.)
PrivilegesRequired=admin
PrivilegesRequiredOverridesAllowed=commandline
OutputDir=C:\Users\User\Documents\Ais.IO\Installer
OutputBaseFilename=aisio-setup
SetupIconFile=C:\Users\User\Documents\Ais.IO\Installer\AisIO_64x64.ico
Compression=lzma
SolidCompression=yes
WizardStyle=modern
WizardSmallImageFile={#AppImage}
AlwaysRestart=no
ChangesEnvironment=yes

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "armenian"; MessagesFile: "compiler:Languages\Armenian.isl"
Name: "brazilianportuguese"; MessagesFile: "compiler:Languages\BrazilianPortuguese.isl"
Name: "bulgarian"; MessagesFile: "compiler:Languages\Bulgarian.isl"
Name: "catalan"; MessagesFile: "compiler:Languages\Catalan.isl"
Name: "chinese_traditional"; MessagesFile: "C:\Users\User\Documents\Ais.IO\Installer\ChineseTraditional.isl"
Name: "chinese_simplified"; MessagesFile: "C:\Users\User\Documents\Ais.IO\Installer\ChineseSimplified.isl"
Name: "corsican"; MessagesFile: "compiler:Languages\Corsican.isl"
Name: "czech"; MessagesFile: "compiler:Languages\Czech.isl"
Name: "danish"; MessagesFile: "compiler:Languages\Danish.isl"
Name: "dutch"; MessagesFile: "compiler:Languages\Dutch.isl"
Name: "finnish"; MessagesFile: "compiler:Languages\Finnish.isl"
Name: "french"; MessagesFile: "compiler:Languages\French.isl"
Name: "german"; MessagesFile: "compiler:Languages\German.isl"
Name: "hebrew"; MessagesFile: "compiler:Languages\Hebrew.isl"
Name: "hungarian"; MessagesFile: "compiler:Languages\Hungarian.isl"
Name: "icelandic"; MessagesFile: "compiler:Languages\Icelandic.isl"
Name: "italian"; MessagesFile: "compiler:Languages\Italian.isl"
Name: "japanese"; MessagesFile: "compiler:Languages\Japanese.isl"
Name: "korean"; MessagesFile: "compiler:Languages\Korean.isl"
Name: "norwegian"; MessagesFile: "compiler:Languages\Norwegian.isl"
Name: "polish"; MessagesFile: "compiler:Languages\Polish.isl"
Name: "portuguese"; MessagesFile: "compiler:Languages\Portuguese.isl"
Name: "russian"; MessagesFile: "compiler:Languages\Russian.isl"
Name: "slovak"; MessagesFile: "compiler:Languages\Slovak.isl"
Name: "slovenian"; MessagesFile: "compiler:Languages\Slovenian.isl"
Name: "spanish"; MessagesFile: "compiler:Languages\Spanish.isl"
Name: "turkish"; MessagesFile: "compiler:Languages\Turkish.isl"
Name: "ukrainian"; MessagesFile: "compiler:Languages\Ukrainian.isl"

[Registry]
Root: HKLM; Subkey: "SYSTEM\CurrentControlSet\Control\Session Manager\Environment"; \
    ValueType: expandsz; ValueName: "Path"; ValueData: "{olddata};{app}"; \
    Flags: preservestringtype;

[Files]
Source: "C:\Users\User\Documents\Ais.IO\bin\x64\Release\{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\Users\User\Documents\Ais.IO\bin\x64\Release\{#MyAppDll}"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{group}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{group}\Uninstall {#MyAppName}"; Filename: "{uninstallexe}\{#MyAppExeName}";  IconFilename: "{app}\AisIO_64x64.ico"

[Run]
Filename: "cmd.exe"; Parameters: "rundll32.exe user32.dll,UpdatePerUserSystemParameters\n/K aisio"; WorkingDir: "{app}"; Flags: postinstall runasoriginaluser waituntilidle;

[InstallDelete]
Type: filesandordirs; Name: "{app}"

[UninstallDelete]
Type: filesandordirs; Name: "{app}"

[Code]
const
  SHCNE_ASSOCCHANGED = $08000000;
  SHCNF_FLUSHNOWAIT = $00003000;

procedure SHChangeNotify(wEventID: integer; uFlags: cardinal; dwItem1, dwItem2: cardinal);
external 'SHChangeNotify@shell32.dll stdcall';

procedure SendChangeNotification;
begin
  SHChangeNotify(SHCNE_ASSOCCHANGED, SHCNF_FLUSHNOWAIT, 0, 0);
end;

function PathExists(CurrentPath, TargetPath: string): Boolean;
var
  PaddedCurrentPath, PaddedTargetPath: string;
begin
  // 在CurrentPath和TargetPath兩端加上分號，確保匹配準確性
  PaddedCurrentPath := ';' + CurrentPath + ';';
  PaddedTargetPath := ';' + TargetPath + ';';
  Result := Pos(PaddedTargetPath, PaddedCurrentPath) > 0;
end;

function AddPath(CurrentPath, TargetPath: string): string;
begin
  // 如果路徑不存在，則追加
  if PathExists(CurrentPath, TargetPath) then
    Result := CurrentPath
  else
    Result := CurrentPath + ';' + TargetPath;
end;

function RemovePath(CurrentPath, TargetPath: string): string;
var
  PaddedCurrentPath, PaddedTargetPath: string;
  StartPos: Integer;
begin
  // 在 CurrentPath 和 TargetPath 兩端加上分號
  PaddedCurrentPath := ';' + CurrentPath + ';';
  PaddedTargetPath := ';' + TargetPath + ';';

  // 找到 TargetPath 的位置
  StartPos := Pos(PaddedTargetPath, PaddedCurrentPath);
  if StartPos > 0 then
  begin
    // 移除匹配路徑
    Delete(PaddedCurrentPath, StartPos, Length(PaddedTargetPath));
  end;

  // 去開頭和結尾的分號
  Result := Copy(PaddedCurrentPath, 2, Length(PaddedCurrentPath) - 1);
end;

procedure BroadcastEnvironmentChange();
begin
  // 使用 Inno Setup 原生方法廣播環境變數變更
  RegWriteStringValue(HKEY_LOCAL_MACHINE,
    'SYSTEM\CurrentControlSet\Control\Session Manager\Environment',
    'Update', '1'); // 建立一個更新標誌 (可選)
  SHChangeNotify(SHCNE_ASSOCCHANGED, SHCNF_FLUSHNOWAIT, 0, 0);
end;

procedure AddToPath();
var
  EnvPath, AppPath, NewPath: string;
begin
  AppPath := ExpandConstant('{app}');
  if RegQueryStringValue(HKEY_LOCAL_MACHINE,
      'SYSTEM\CurrentControlSet\Control\Session Manager\Environment',
      'Path', EnvPath) then
  begin
    NewPath := AddPath(EnvPath, AppPath);
    RegWriteStringValue(HKEY_LOCAL_MACHINE,
        'SYSTEM\CurrentControlSet\Control\Session Manager\Environment',
        'Path', NewPath);
    BroadcastEnvironmentChange(); // 通知更新
  end;
end;

procedure RemoveFromPath();
var
  EnvPath, AppPath, NewPath: string;
begin
  AppPath := ExpandConstant('{app}');
  if RegQueryStringValue(HKEY_LOCAL_MACHINE,
      'SYSTEM\CurrentControlSet\Control\Session Manager\Environment',
      'Path', EnvPath) then
  begin
    NewPath := RemovePath(EnvPath, AppPath);
    RegWriteStringValue(HKEY_LOCAL_MACHINE,
        'SYSTEM\CurrentControlSet\Control\Session Manager\Environment',
        'Path', Trim(NewPath)); // 確保移除多餘空格
    BroadcastEnvironmentChange(); // 通知更新
  end;
end;

procedure CurStepChanged(CurStep: TSetupStep);
begin
  if CurStep = ssInstall then
    AddToPath();
end;

procedure CurUninstallStepChanged(CurUninstallStep: TUninstallStep);
begin
  if CurUninstallStep = usUninstall then
    RemoveFromPath();
end;

procedure DeinitializeSetup();
begin
  // 在安裝和解除安裝結束後執行
  RemoveFromPath();
end;